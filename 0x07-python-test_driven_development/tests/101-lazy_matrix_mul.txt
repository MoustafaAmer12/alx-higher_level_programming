>>> matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[ 7 10]
 [15 22]]

>>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13 16]]

>>> print(matrix_mul([[1, 2.3], [3.4, 4.2]], [[1.3, 2.3], [3.3, 4.1]]))
[[ 8.89 11.73]
 [18.28 25.04]]

>>> print(matrix_mul([[1.0, 2.0], [3.0, 4.0]], [[1.0, 2], [3, 4]]))
[[ 7. 10.]
 [15. 22.]]

"""
Error
"""

>>> try:
...	print(matrix_mul([[1, 2, 3]], [1, 2, 3]))
... except Exception as te:
...	print(te)
[14]

>>> try:
...	print(matrix_mul([[1, "HELLO"]], [[3, 4], [5, 6]]))
... except Exception as te:
... 	print(te)
ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U21'), dtype('int64')) -> None

>>> try:
...	print(matrix_mul([[1, 2], [3, 4]], [[1, 2], ["3", 4]]))
... except Exception as te:
... 	print(te)
ufunc 'matmul' did not contain a loop with signature matching types (dtype('int64'), dtype('<U21')) -> None


>>> try:
...	print(matrix_mul([[1], [2]], [[3, 4], [5, 6]]))
... except Exception as te:
... 	print(te)
matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 1)


>>> try:
...	print(matrix_mul([[1], [3, 2]], [[3, 4], [5, 6]]))
... except Exception as te:
... 	print(te)
setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

>>> try:
...	print(matrix_mul([[1], [2]], [[2, 3, 4], [5, 6]]))
... except Exception as te:
... 	print(te)
setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

>>> try:
...	print(matrix_mul(None, None))
... except Exception as te:
... 	print(te)
matmul: Input operand 0 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

>>> try:
...	print(matrix_mul([1, 2], None))
... except Exception as te:
... 	print(te)
matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

>>> try:
...	print(matrix_mul([], []))
... except Exception as te:
... 	print(te)
0.0

>>> try:
...	print(matrix_mul([None], []))
... except Exception as te:
... 	print(te)
matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 0 is different from 1)

>>> try:
...	print(matrix_mul([1, 2, 3], []))
... except Exception as te:
... 	print(te)
matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 0 is different from 3)

>>> try:
...	print(matrix_mul([1, 2, 3], [None]))
... except Exception as te:
... 	print(te)
matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 3)

>>> try:
...	print(matrix_mul([[1, 2, 3]], [None]))
... except Exception as te:
... 	print(te)
matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 3)

>>> try:
...	print(matrix_mul([[5, 6], [7, 8]], [[]]))
... except Exception as te:
... 	print(te)
matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 2)

>>> try:
...	print(matrix_mul([[1, 2], [3, 4], [3, 4]], [[5, 6, 1], [7, 8, 2]]))
... except Exception as te:
... 	print(te)
[[19 22  5]
 [43 50 11]
 [43 50 11]]

>>> try:
...	print(matrix_mul([[1, 2, 3]], ))
... except Exception as te:
...	print(te)
lazy_matrix_mul() missing 1 required positional argument: 'm_b'

>>> try:
...	print(matrix_mul())
... except Exception as te:
...	print(te)
lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
