=========================
The ''lazy_matrix_mul'' Module
=========================
Using ''lazy_matrix_mul''
--------------------
First import the function:
	>>> matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Test the function for various cases
Tests for normal operation:
	>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
	array([[ 7, 10],
	       [15, 22]])

	>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
	array([[13, 16]])
	
	>>> matrix_mul([[1, 2.3], [3.4, 4.2]], [[1.3, 2.3], [3.3, 4.1]])
	array([[ 8.89, 11.73],
	       [18.28, 25.04]])

Tests for exceptions:
	>>> matrix_mul([[]], [[1, 2]])
	Traceback (most recent call last):
	ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 0)

	>>> matrix_mul([[1, 2]], [[1, 4]])
	Traceback (most recent call last):
	ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 2)

	>>> matrix_mul([[1, 2]], 1)
	Traceback (most recent call last):
	ValueError: matmul: Input operand 1 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)
	
	>>> matrix_mul(1, [[1, 2]])
	Traceback (most recent call last):
	ValueError: matmul: Input operand 0 does not have enough dimensions (has 0, gufunc core with signature (n?,k),(k,m?)->(n?,m?) requires 1)

	>>> matrix_mul([[1, 2], 1], [[1, 2]])
	Traceback (most recent call last):
	ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

	>>> matrix_mul([[1, 2]], [[1, 2], 1])
	Traceback (most recent call last):
	ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

	>>> matrix_mul([[1, 2], ['a', 4]], [[1, 2]])
	Traceback (most recent call last):
	numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U21'), dtype('int64')) -> None

	>>> matrix_mul([[1, 2]], [[1, 2], ['a', 4]])
	Traceback (most recent call last):
	numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('int64'), dtype('<U21')) -> None

	>>> matrix_mul([[1, 2, 3], [1, 2, 4]], [[1, 2], [1]])
	Traceback (most recent call last):
	ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.
	
	>>> matrix_mul([[1, 2, 3], [1, 2]], [[1, 2]])
	Traceback (most recent call last):
	ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

	>>> matrix_mul([[]])
	Traceback (most recent call last):
	TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'
	
	>>> matrix_mul()
	Traceback (most recent call last):
	TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

	>>> matrix_mul([[1, 2]], [[]])
	Traceback (most recent call last):
	ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 2)
