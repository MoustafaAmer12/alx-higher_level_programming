===============================
The ''2-matrix_divided'' Module
===============================

Using matrix_divided
--------------------

Import the function:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test The Function:

1- Tests for correct division of positive and negative numbers
	>>> matrix_divided([[-1]], -1)
	[[1.0]]

	>>> matrix_divided([[-1]], 1)
	[[-1.0]]

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 5)
	[[0.2, 0.4, 0.6], [0.8, 1.0, 1.2]]

	>>> matrix_divided([[4, 8], [12, 16]], 4)
	[[1.0, 2.0], [3.0, 4.0]]

	>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]

2- Tests for Corner Cases and Exceptions
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided(None, 0)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([1, 2, 3], 1)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([["ahmed", 1], [2, 3]], 1)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'x')
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided([[1]], "ahmeD")
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided(3)
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
