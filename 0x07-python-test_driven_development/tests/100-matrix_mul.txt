=========================
The ''matrix_mul'' Module
=========================
Using ''matrix_mul''
--------------------
First import the function:
	>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Test the function for various cases
Tests for normal operation:
	>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
	[[7, 10], [15, 22]]

	>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
	[[13, 16]]

Tests for exceptions:
	>>> matrix_mul([[]], [[1, 2]])
	Traceback (most recent call last):
	ValueError: m_a can't be empty

	>>> matrix_mul([[1, 2]], [[1, 4]])
	Traceback (most recent call last):
	ValueError: m_a and m_b can't be multiplied

	>>> matrix_mul([[1, 2]], 1)
	Traceback (most recent call last):
	TypeError: m_b must be a list

	>>> matrix_mul([[1, 2], 1], [[1, 2]])
	Traceback (most recent call last):
	TypeError: m_a must be a list of lists

	>>> matrix_mul([[1, 2], ['a', 4]], [[1, 2]])
	Traceback (most recent call last):
	TypeError: m_a should contain only integers or floats

	>>> matrix_mul([[1, 2, 3], [1, 2, 4]], [[1, 2], [1]])
	Traceback (most recent call last):
	TypeError: each row of m_b must be of the same size

	>>> matrix_mul([[]])
	Traceback (most recent call last):
	TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

	>>> matrix_mul([[1, 2]], [[]])
	Traceback (most recent call last):
	ValueError: m_b can't be empty
